I"y<h2 id="preface">Preface</h2>
<p>Whenever I was googling for information, codes highlighted as fancy editor attracted me. When I started my blog few days ago, however, there were nothing else than monotonous texts. I wanted to make my code sexier, and <strong>rouge</strong> made it possible.</p>

<p>If you are planning to run a Jekyll blog, or already Jekyll user, using Rouge as syntax highlighter is highly recommended. Rouge as default highlighter in Jekyll 3 and above is specified in official Jekyll website.</p>

<blockquote>
  <h3 id="code-snippet-highlighting">Code snippet highlighting</h3>
  <p>Jekyll has built in support for syntax highlighting of over 100 languages thanks to Rouge. Rouge is the default highlighter in Jekyll 3 and above.</p>

  <p><a href="https://jekyllrb.com/docs/liquid/tags/#code-snippet-highlighting">Official Jekyll Website</a></p>
</blockquote>

<h2 id="how-to-apply-rouge-on-your-website">How to apply Rouge on your website</h2>

<h3 id="1-install-rouge">1. Install Rouge</h3>

<ul>
  <li>
    <p>Letâ€™s start with the assumption that your computer is alrealy equipped with <strong>Ruby</strong> and <strong>Gem</strong> environment.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">$ gem install rouge</code></p>
    <ul>
      <li>Install Rouge on your computer.</li>
    </ul>
  </li>
</ul>

<h3 id="2-select-style">2. Select Style</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">$ rougify help style</code>
    <ul>
      <li>View available themes.</li>
    </ul>
  </li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rougify <span class="nb">help </span>style
usage: rougify style <span class="o">[</span>&lt;theme-name&gt;] <span class="o">[</span>&lt;options&gt;]

Print CSS styles <span class="k">for </span>the given theme.  Extra options are
passed to the theme. To <span class="k">select </span>a mode <span class="o">(</span>light/dark<span class="o">)</span> <span class="k">for </span>the
theme, append <span class="s1">'.light'</span> or <span class="s1">'.dark'</span> to the &lt;theme-name&gt;
respectively. Theme defaults to thankful_eyes.

options:
  <span class="nt">--scope</span>       <span class="o">(</span>default: .highlight<span class="o">)</span> a css selector to scope by
  <span class="nt">--tex</span>         <span class="o">(</span>default: <span class="nb">false</span><span class="o">)</span> render as TeX
  <span class="nt">--tex-prefix</span>  <span class="o">(</span>default: RG<span class="o">)</span> a <span class="nb">command </span>prefix <span class="k">for </span>TeX
                implies <span class="nt">--tex</span> <span class="k">if </span>specified

available themes:
  base16, base16.dark, base16.light, base16.monokai, base16.monokai.dark, base16.monokai.light, base16.sol
arized, base16.solarized.dark, base16.solarized.light, bw, colorful, github, gruvbox, gruvbox.dark, gruvbo
x.light, igorpro, magritte, molokai, monokai, monokai.sublime, pastie, thankful_eyes, tulip
</code></pre></div></div>
<hr />

<p>This is first line.
This is second line.<br />
This is third line.</p>

<hr />
<ul>
  <li>They are wrapped with <code class="language-plaintext highlighter-rouge">&lt;p&gt;</code> tag when they are rendered.</li>
  <li>If you want to make line break in paragraph, type two spaces and return. Or there would be a connected line.</li>
  <li>If you want to write other paragraph, type return twice. And that paragraph will be wrapped with new <code class="language-plaintext highlighter-rouge">&lt;p&gt;</code> tag.</li>
</ul>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://rubygems.org/gems/rouge">Ruby Gem â€˜rougeâ€™</a></li>
  <li><a href="http://rouge.jneen.net/v3.23.0/markdown/">Test your code on Rouge theme</a></li>
  <li><a href="https://github.com/rouge-ruby/rouge">Rouge Github</a></li>
</ul>

:ET